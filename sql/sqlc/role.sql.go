// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: role.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getRole = `-- name: GetRole :one
SELECT id, name, description, created_at, updated_at from roles
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetRole(ctx context.Context, id uuid.UUID) (Role, error) {
	row := q.db.QueryRowContext(ctx, getRole, id)
	var i Role
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getRoleByName = `-- name: GetRoleByName :one
SELECT id, name, description
FROM roles
WHERE name = $1 LIMIT 1
`

type GetRoleByNameRow struct {
	ID          uuid.UUID `json:"id"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
}

func (q *Queries) GetRoleByName(ctx context.Context, name string) (GetRoleByNameRow, error) {
	row := q.db.QueryRowContext(ctx, getRoleByName, name)
	var i GetRoleByNameRow
	err := row.Scan(&i.ID, &i.Name, &i.Description)
	return i, err
}
